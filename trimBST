//Given the root of a binary search tree and the lowest and highest boundaries as low and high, trim the tree so that all its elements lies in [low, high]. 
// You might need to change the root of the tree, so the result should return the new root of the trimmed binary search tree.

class Solution {
public:
    TreeNode* trimBST(TreeNode* root, int low, int high) {
        
        if(root == NULL)
            return NULL;
        
      if(root->left && root->left->val < low)
          root->left = trimBST(root->left->right, low,high);
      else
     root->left = trimBST(root->left, low, high);
     
      if(root->right && root->right->val > high)
          root->right = trimBST(root->right->left,low,high);
      else
        root->right = trimBST(root->right,low, high);
        
        if( root->val < low )
           return root->right;
          if( root->val > high)
            return root->left;
       return root; 
    }
};
